/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.pos.sistemagams.vista;

import java.awt.CardLayout;
import java.sql.SQLException;

/**
 *
 * @author Diego
 */
public class PanelVentas extends javax.swing.JPanel {
    
    // Variables para los paneles y CardLayout
    private CardLayout cardLayout;
    private PanelVentasTransacciones panelTransacciones;
    private PanelVentasUtilidad panelUtilidad;
    
    // Constantes para identificar las tarjetas
    private static final String CARD_TRANSACCIONES = "TRANSACCIONES";
    private static final String CARD_UTILIDAD = "UTILIDAD";
    
    /**
     * Creates new form PanelVentas
     */
    public PanelVentas() {
        initComponents();
        configurarCardLayout();
        mostrarPanelInicial();
    }
    
    /**
     * Configura el CardLayout y agrega los paneles
     */
    private void configurarCardLayout() {
        // Obtener el CardLayout del panelContenedor
        cardLayout = (CardLayout) panelContenedor.getLayout();
        
        // Crear instancias de los paneles
        panelTransacciones = new PanelVentasTransacciones();
        panelUtilidad = new PanelVentasUtilidad();
        
        // Agregar los paneles al CardLayout con sus nombres
        panelContenedor.add(panelTransacciones, CARD_TRANSACCIONES);
        panelContenedor.add(panelUtilidad, CARD_UTILIDAD);
    }
    
    /**
     * Muestra el panel inicial (Transacciones por defecto)
     */
    private void mostrarPanelInicial() {
        cardLayout.show(panelContenedor, CARD_TRANSACCIONES);
        actualizarEstadoBotones(btnTransacciones);
        
        // Refrescar datos al mostrar
        if (panelTransacciones != null) {
            panelTransacciones.refrescarDatos();
        }
    }
    
    /**
     * Actualiza el estado visual de los botones
     */
    private void actualizarEstadoBotones(javax.swing.JButton botonActivo) {
        // Resetear todos los botones
        btnTransacciones.setEnabled(true);
        btnUtilidad.setEnabled(true);
        
        // Opcional: Cambiar apariencia del botón activo
        btnTransacciones.setBackground(javax.swing.UIManager.getColor("Button.background"));
        btnUtilidad.setBackground(javax.swing.UIManager.getColor("Button.background"));
        
        // Marcar el botón activo (opcional - cambiar color de fondo)
        if (botonActivo != null) {
            botonActivo.setBackground(new java.awt.Color(70, 130, 180)); // Azul
            botonActivo.setForeground(java.awt.Color.WHITE);
        }
    }
    
    /**
     * Refresca los datos de ambos paneles
     */
    public void refrescarDatos() {
        if (panelTransacciones != null) {
            panelTransacciones.refrescarDatos();
        }
        if (panelUtilidad != null) {
            panelUtilidad.refrescarDatos();
        }
        System.out.println("✅ Datos de ventas refrescados");
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnTransacciones = new javax.swing.JButton();
        btnUtilidad = new javax.swing.JButton();
        panelContenedor = new javax.swing.JPanel();

        jPanel1.setLayout(new java.awt.GridBagLayout());

        btnTransacciones.setText("TRANSACCIONES");
        btnTransacciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransaccionesActionPerformed(evt);
            }
        });
        jPanel1.add(btnTransacciones, new java.awt.GridBagConstraints());

        btnUtilidad.setText("UTILIDAD");
        btnUtilidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUtilidadActionPerformed(evt);
            }
        });
        jPanel1.add(btnUtilidad, new java.awt.GridBagConstraints());

        panelContenedor.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
            .addComponent(panelContenedor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelContenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnTransaccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransaccionesActionPerformed
        // Mostrar el panel de transacciones
        cardLayout.show(panelContenedor, CARD_TRANSACCIONES);
        actualizarEstadoBotones(btnTransacciones);
    }//GEN-LAST:event_btnTransaccionesActionPerformed

    private void btnUtilidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUtilidadActionPerformed
       // Mostrar el panel de utilidad
        cardLayout.show(panelContenedor, CARD_UTILIDAD);
        actualizarEstadoBotones(btnUtilidad);
    }//GEN-LAST:event_btnUtilidadActionPerformed

    public PanelVentasTransacciones getPanelTransacciones() {
        return panelTransacciones;
    }
    
    public PanelVentasUtilidad getPanelUtilidad() {
        return panelUtilidad;
    }
    
    /**
     * Método para cambiar programáticamente de panel
     */
    public void mostrarPanel(String nombrePanel) {
        switch(nombrePanel) {
            case CARD_TRANSACCIONES:
                btnTransaccionesActionPerformed(null);
                break;
            case CARD_UTILIDAD:
                btnUtilidadActionPerformed(null);
                break;
            default:
                System.err.println("Panel no reconocido: " + nombrePanel);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTransacciones;
    private javax.swing.JButton btnUtilidad;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel panelContenedor;
    // End of variables declaration//GEN-END:variables
}
